apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.name }}-deployment
spec:
  replicas: {{ .Values.postgres.replicaCount }}
  selector:
    matchLabels:
      components: {{ .Values.postgres.components }}
  template:
    metadata:
      labels:
        components: {{ .Values.postgres.components }}
    spec:
      containers:
        - name: {{ .Values.postgres.name }}
          image: "{{ .Values.postgres.image }}:{{ .Values.postgres.imageVersion }}"
          resources:
            limits: {{ .Values.postgres.limits | toYaml | nindent 14 }}
          ports:
            - containerPort: {{ .Values.postgres.port }}
          env:
            - name: POSTGRESQL_DATABASE
              value: {{ .Values.db.db }}
            {{- range .Values.postgres.envs}}
            {{- $data := dict "name" $.Values.postgres.name "env" .}}
            {{- include "env.template" $data | indent 12}}
            {{- end}}
          volumeMounts:
            - name: {{ .Values.postgres.name }}-data
              mountPath: /bitnami/postgresql
              subPath: postgres
      volumes:
        - name: {{ .Values.postgres.name }}-data
          persistentVolumeClaim:
            claimName: {{ .Values.postgres.name }}-pvc
